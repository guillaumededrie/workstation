#!/usr/bin/env -S nft --file
# {{ ansible_managed }}
# Inpired by:
#   - https://wiki.nftables.org/wiki-nftables/index.php/Simple_ruleset_for_a_server
#   - https://doc.huc.fr.eu.org/fr/sec/firewall/linux-firewall-icmpv6/
#   - https://pablotron.org/articles/nftables-examples/

flush ruleset

table inet firewall {
    chain input {
        type filter hook input priority filter;
        policy drop;

        ct state vmap { established : accept, related : drop, invalid : drop }

        # Interface lo restrictions
        iif lo accept
        iif != lo ip daddr 127.0.0.1/8 counter drop comment "drop connections to loopback not coming from loopback"
        iif != lo ip6 daddr ::1/128 counter drop comment "drop connections to loopback not coming from loopback"

        # ICMP restrictions
        icmpv6 type { nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert } accept

        # mDNS restrictions
        ip saddr @LANv4 ip daddr 224.0.0.251 udp dport 5353 counter accept comment "Accept mDNS on local networks"
        ip6 saddr @LANv6 ip6 daddr ff02::fb udp dport 5353 accept comment "Accept mDNS"

        # DHCP restrictions
        ip6 saddr fe80::/10 udp sport 547 udp dport 546 accept comment "Accept DHCPv6 replies from IPv6 link-local addresses"

        log prefix "[nftables] Input Denied: " counter drop
    }

    chain forward {
        type filter hook forward priority security;
        policy drop;

        meta mark 42 accept
        log prefix "[nftables] Forward Denied: " counter
    }


    chain output {
        type filter hook output priority filter;
        policy accept;

        oif lo accept

        # ICMP restrictions
        meta l4proto icmp accept
        meta l4proto icmpv6 accept

        # Generic rules
        meta l4proto . th dport @output_protocol_dport_authorized accept
        udp sport 123 udp dport 123 counter accept comment "accept NTP"

        # DHCPv4
        ip protocol udp udp sport 68 udp dport 67 accept comment "Accept DHCPv4 requests"

        # DHCPv6
        ip6 daddr ff02::1:2 udp sport 546 udp dport 547 accept comment "Accept DHCPv6 replies from IPv6 link-local addresses"

        # mDNS
        ip daddr 224.0.0.251 udp dport 5353 counter accept comment "Accept mDNS on local networks"
        ip6 daddr ff02::fb udp dport 5353 accept comment "Accept mDNS"

        # UPnP
        ip daddr 239.255.255.250 udp dport 1900 counter accept comment "Accept UPnP"

        # Tailscale, see: https://tailscale.com/kb/1082/firewall-ports
        udp sport 41641 counter accept comment "Allow Tailscale Direct Wireguard tunnels"
        udp dport 3478 counter accept comment "Allow STUN protocol behind NAT"
        # But also https://forum.tailscale.com/t/strictest-set-of-possible-firewall-rules/1367/10
        ip daddr 203.0.113.1 udp dport 12345 counter accept comment "Allow Tailscaleâ€¦"
        ip daddr @LANv4 udp dport { 1900, 5351 } counter accept comment "Allow Tailscale UPnP and PCP"

        log prefix "[nftables] Output Denied: " counter reject
    }


    # SETs
    set LANv4 {
        type ipv4_addr
        flags interval
        elements = {
            10.0.0.0/8,
            172.16.0.0/12,
            169.254.0.0/16,
            192.168.0.0/16,
        }
    }

    set LANv6 {
        type ipv6_addr
        flags interval
        elements = {
            fd00::/8,
            fe80::/10,
        }
    }

    set output_protocol_dport_authorized {
        type inet_proto . inet_service
        counter
        elements = {
            tcp . 22, # SSH
            tcp . 53, # DNS
            udp . 53, # DNS
            tcp . 80, # Web
            udp . 123, # SNTP
            tcp . 443, # TLS
            udp . 443, # QUIC
            tcp . 465, # SMTPs
            tcp . 587, # SMTPs
            tcp . 993, # IMAPs
        }
    }
}


table ip filter {
    chain DOCKER-USER {
        meta mark set 42
    }
}
