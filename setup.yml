---

- hosts: localhost
  connection: local
  handlers:
    - name: Iptables | Restart services
      service:
        name: "{{ item }}"
        state: restarted
      ignore_errors: True
      loop:
        - iptables
        - ip6tables
        - docker
  tasks:
    - tags: ['update']
      become: yes
      block:
        - name: Pacman | Upgrade (cache and packages)
          pacman:
            update_cache: yes
            upgrade: yes
          register: pacman_upgraded

        - debug:
            var: pacman_upgraded.packages


    - tags: ['firewall']
      become: yes
      block:
        - name: Iptables | Installing packages
          package:
            name: iptables
            state: present

        - name: Iptables | Copying configuration files
          tags: ['iptables']
          template:
            src: "{{ item.src }}"
            dest: "{{ item.dest }}"
            owner: root
            group: root
            mode: 0600
          with_items:
            - src: ./files/iptables/ipv4.rules.j2
              dest: /etc/iptables/iptables.rules
            - src: ./files/iptables/ipv6.rules.j2
              dest: /etc/iptables/ip6tables.rules
          notify:
            - Iptables | Restart services

        - name: Iptables | Enable services
          service:
            name: "{{ item }}"
            enabled: yes
          loop:
            - iptables
            - ip6tables

          # Flush handlers before moving to other installations/configurations
        - meta: flush_handlers


    - tags: ['network', 'wifi', 'wpa_supplicant']
      become: yes
      block:
        - name: Install Wpa_supplicant
          package:
            name: "wpa_supplicant"
            state: present

        - name: Link wpa_supplicant hook for Dhcpcd
          file:
            src: "/usr/share/dhcpcd/hooks/10-wpa_supplicant"
            dest: "/usr/lib/dhcpcd/dhcpcd-hooks/10-wpa_supplicant"
            state: link

        - name: Link user files
          file:
            src: "{{ item | realpath }}"
            dest: "/etc/wpa_supplicant/{{ item | basename }}"
            state: link
          with_fileglob: "wpa_supplicant/*"


    - tags: ['fonts']
      become: yes
      block:
        - name: Fonts | Install packages
          package:
            name: "{{ item }}"
            state: present
          with_items:
              # Tools
            - kbd
              # Fonts
            - font-mathematica
            - terminus-font
            - ttf-bitstream-vera
            - ttf-dejavu
            - ttf-droid
            - ttf-freefont
            - ttf-gentium
            - ttf-inconsolata
            - ttf-liberation
            - ttf-linux-libertine
            #- ttf-symbola # Removed from official repositories (https://bugs.archlinux.org/task/58886)

        - name: Fonts | Set lat1-16 as default font in /etc/vconsole.conf
          lineinfile:
            dest: /etc/vconsole.conf
            regexp: "^FONT="
            line: "FONT=lat1-16"
            create: yes


    - tags: ['X11']
      become: yes
      block:
        - name: X11 | Install packages
          package:
            name: "{{ item }}"
            state: present
          with_items:
            - xf86-input-libinput
            - xf86-video-intel
            - xorg-apps
            - xorg-server
            - xorg-xinit

        - name: Xorg | Add Intel Conf
          file:
            src: ./files/xorg/20-intel.conf
            dest: /etc/X11/xorg.conf.d/20-intel.conf
            state: link
            force: yes


    - tags: ['sound']
      become: yes
      block:
        - name: Alsa | Install Alsa related packages
          package:
            name: "{{ item }}"
            state: present
          with_items:
            - pulseaudio-alsa
            - alsa-lib
            - alsa-utils
            - alsa-plugins

        - name: Alsa | Copy the Modprobe configuration file
          become: yes
          file:
            src: ./files/alsa/alsa-base.conf
            dest: /etc/modprobe.d/alsa-base.conf
            state: link
            force: yes


    - tags: ['packages']
      block:
        - name: Install standalone packages
          become: yes
          package:
            name: "{{ item }}"
            state: present
          with_items:
            # TODO: Commented due to https://github.com/ansible/ansible/issues/24110
            #- dnsutils # host, bind
            - arandr
            - atom
            - atool
            - bluez
            - bluez-utils
            - bridge-utils
            - ccid # For Yubikey support
            - cups
            - diff-so-fancy
            - dnsmasq
            - docker
            - docker-compose
            - dosfstools # For Fat32 partitioning
            - ebtables
            - exfat-utils
            - feh
            - fzf
            - gimp
            - git
            - git-lfs
            - glances
            - gparted
            - hdparm
            - hplip
            - htop
            - hunspell # For libreoffice spell checking
            - hunspell-en
            - hunspell-fr
            - hyphen # For Libreoffice hyphenation rules
            - hyphen-en
            - hyphen-fr
            - imagemagick
            - imlib2 # For ranger
            - ipython
            - keepassx
            - libimobiledevice # iPhone USB Tethering
            - libmythes # Thesaurus for Libreoffice
            - libreoffice-fresh
            - libvirt
            - linux-headers
            - lsof
            - mlocate
            - mupdf
            - mythes-en # Thesaurus related to Libreoffice (libmythes)
            - mythes-fr # Thesaurus related to Libreoffice (libmythes)
            - nmap
            - nodejs
            - noto-fonts-emoji
            - ntfs-3g
            - openbsd-netcat
            - openldap
            - openssh
            - openvpn
            - p7zip
            - pandoc
            - pcsclite # For Yubikey
            - perl-image-exiftool
            - pinentry # For Yubikey and others
            - poppler
            - poppler-glib # For GIMP, see: https://wiki.archlinux.org/index.php/GIMP#GIMP_PDF_editing_doesn.27t_work
            - proxychains-ng
            - pwgen
            - python-pip
            - python-crypto
            - qemu
            - socat
            - sshpass
            - tcpdump
            - texlive-lang
            - texlive-most
            - tldr
            - the_silver_searcher
            - tree
            - usbmuxd # For iPhone (USB Tethering)
            - vagrant
            - virtualbox
            - virtualbox-host-modules-arch
            - vlc
            - w3m
            - wget
            - whois
            - zathura
            - zathura-pdf-mupdf
            - zip


    - tags: ['dotfiles']
      block:
        - name: Install dotfiles packages
          become: yes
          package:
            name: "{{ item }}"
            state: present
          with_items:
            - dmenu # For i3
            - i3-wm
            - i3status
            - i3lock
            - git
            - neomutt
            - ranger
            - termite
            - termite-terminfo
            - tmux
            - vim
            - weechat

        - tags: ['vimplug']
          block:
            - name: VimPlug | Create autoload directory
              file:
                path: "{{ ansible_user_dir }}/.vim/autoload/"
                state: directory
                recurse: yes

            - name: Install Vim-plug
              get_url:
                url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
                dest: "{{ ansible_user_dir }}/.vim/autoload/plug.vim"

            - name: Update VimPlugs
              tags: ['update']
              command: vim +PlugUpgrade +qall

        - name: Clone Antigen repo
          tags: ['update', 'antigen', 'zsh']
          git:
            repo: https://github.com/zsh-users/antigen.git
            dest: "{{ ansible_user_dir }}/.antigen"
            version: master

        - name: Link config file
          find:
            paths: ./files/dotfiles
            hidden: yes
            recurse: yes
          register: dotfiles_find

        - name: Dotfiles | Create directories before linking
          file:
            path: "{{ ansible_user_dir }}/{{ item.path | relpath('./files/dotfiles') | dirname }}"
            state: directory
            recurse: yes
          with_items: "{{ dotfiles_find.files }}"

        - name: Dotfiles | Link files
          file:
            src: "{{ item .path | realpath }}"
            dest: "{{ ansible_user_dir }}/{{ item.path | relpath('./files/dotfiles') }}"
            state: link
            force: yes
          with_items: "{{ dotfiles_find.files }}"

        - name: Install Vim Plugins
          command: vim +PlugInstall +qall

        - tags: ['update']
          name: Update Vim plugins
          command: vim +PlugUpdate +qall

        - tags: ['update']
          debug:
            msg: "Don't forget to run antigen selfupdate et antigen update"


    - name: User | Add and configure users
      tags: ['user']
      become: yes
      user:
        name: gdedrie
        group: gdedrie
        groups:
          - adm
          - libvirt # For passwordless access to the libvirt socket
          - sys
          - users
          - wheel


    - tags: ['chrome']
      become: yes
      block:
        - name: Chrome | Install
          package:
            # For U2F
            name: libu2f-host
            state: present

        - name: Chrome | Configure default extensions
          copy:
            content: "{ \"external_update_url\": \"https://clients2.google.com/service/update2/crx\" }"
            dest: "/opt/google/chrome/default_apps/{{ item }}.json"
          with_items:
            - gcbommkclmclpchllfjekcdonpmejbdp # HTTPS Everywhere
            - pkehgijcmpdhfbdbbnkijodmdjhbjlgp # Privacy Badger
            - cjpalhdlnbpafiamejdnhcphjbkeiagm # uBlock Origin
            - mfidmkgnfgnkihnjeklbekckimkipmoe # Flashcontrol
            - eiadekoaikejlgdbkbdfeijglgfdalml # WebRTC Leak Prevent
            - dbepggeogbaibhgnhhndojpepiihcmeb # Vimium


    - tags: ['backups']
      become: yes
      block:
        - name: Backups | Install Borgmatic
          pip:
            name: borgmatic
            # Not specifying the executable will install the borgmatic package in the virtualenv you are using.
            executable: /usr/bin/pip3
            state: present

        - name: Backups | Create Borgmatic config directory
          file:
            path: /etc/borgmatic.d
            state: directory

        - name: Backups | Add backup config file
          file:
            src: ./files/backups/borgmatic-backups.yml
            dest: /etc/borgmatic.d/backups.yml
            state: link

        - name: Backups | Install SystemD units
          file:
            src: "{{ item | realpath }}"
            dest: "/etc/systemd/system/{{ item | basename }}"
            state: link
          with_fileglob: ./files/backups/systemd/*
          register: backups_systemd_files

          # TODO: Use Handlers instead
        - when: backups_systemd_files is changed
          name: Backups | Reload SystemD daemon
          systemd:
            daemon_reload: yes

        - when: backups_systemd_files is changed
          name: Backups | Enable SystemD services
          systemd:
            name: perform-backup.timer
            enabled: yes
            state: started
